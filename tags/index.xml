
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
 <channel>
   <title>Tags on hhatefi</title>
   <link>https://hhatefi.github.io/tags/</link>
   <description>Recent content in Tags on hhatefi</description>
   <generator>Hugo -- gohugo.io</generator>
   <copyright>&amp;copy; 2020 - hhatefi</copyright>
   
       <atom:link href="https://hhatefi.github.io/tags/index.xml" rel="self" type="application/rss+xml" />
   
   
     <item>
       <title>Portfolio Optimization</title>
       <link>https://hhatefi.github.io/posts/portfolio_opt/</link>
       <pubDate>Thu, 14 Jan 2021 15:02:25 +0100</pubDate>
       
       <guid>https://hhatefi.github.io/posts/portfolio_opt/</guid>
       <description>&lt;p&gt;Modern portfolio theory provides a framework to address assetallocation problem and construct portfolios. The idea was first putforward by Harry Markowitz in 1952 and since then has been enhancedboth in theory and practice and found its application in financialindustry. In this post, I formulate asset allocation problem andexplain with a simple example how to solve it using mean-varianceoptimization.&lt;/p&gt;&lt;h2 id=&#34;problem-formulation-as-mean-variance-optimization&#34;&gt;Problem formulation as mean-variance optimization&lt;/h2&gt;&lt;p&gt;Assume an investor has to select a portfolio comprised of \(N\) riskyassets. The investor&amp;rsquo;s selection is represented by vector \(\boldsymbolw=(w_1, w_2,\dotsc,w_N)^T\), where \(w_i\) denotes the fraction of thecapital invested in asset \(i\). The fractions should indeed sum up toone:&lt;/p&gt;&lt;p&gt;\[\sum_{i=1}^{N}w_i = 1\]&lt;/p&gt;&lt;p&gt;Assume for the moment that short selling is possible, which meansweights can be negative. Now if the return of each asset is known, itwill be possible to quantify the performance of theportfolio. However, asserts are risky, which means their returns varyand so does the portfolio return. Therefore, portfolio and assetreturns are modeled as random variables. Let random variable \(R_i\)denote the return of asset \(i\) and so random vector \(\boldsymbolR=(R_1,R_2,\dotsc,R_N)^T\) be the return of all assets. The overallreturn of the portfolio is then specified by random variable&lt;/p&gt;&lt;p&gt;\[R_p=\sum_{i=1}^{N}w_iR_i=\boldsymbol w^T\boldsymbol R\]&lt;/p&gt;&lt;p&gt;Moreover, let \(\boldsymbol\mu=(\mu_1,\mu_2,\dotsc,\mu_N)^T\) be thevector of expected returns, where \(\mu_i\) is the expected return ofasset \(i\), i.e. \(\mu_i=E(R_i)\). The performance of the portfolio canthen be assessed by its expected return \(\mu_p=\boldsymbolw^T\boldsymbol\mu\). Now the question is how to quantify the risk of theportfolio. Markowitz used the overall variance of the portfolio, whichis the variance of random variable \(R_p\), as the risk measure. It isnot hard to see that the variance can be computed as follows:&lt;/p&gt;&lt;p&gt;\[\sigma_p=\boldsymbol w^T\Sigma\boldsymbol w\]&lt;/p&gt;&lt;p&gt;where \(\Sigma=\{\sigma_{ij}\}_{1\le i,j\le N}\) is the covariancematrix of asset returns with \(\sigma_{ij}\) being the covariancebetween the return of asset \(i\) and \(j\).&lt;/p&gt;&lt;p&gt;Modern portfolio theory tries to select portfolios by offering atrade-off between their risk and return. It aims to compute the leastrisky portfolio for a given return level or the most profitableportfolio entailing a predefined risk level. It can be formulated as anoptimization problem in variant ways. Here, I explain the &lt;em&gt;riskminimization&lt;/em&gt; formulation, where the portfolio risk is subject tominimization while its expected return is kept at a predefined level.\[ \min~\boldsymbol w^T \Sigma \boldsymbol w \] subject to&lt;/p&gt;&lt;p&gt;\begin{align*}\boldsymbol w^T \boldsymbol u&amp;amp;=\mu_0\\\&lt;br&gt;\boldsymbol w^T\boldsymbol 1&amp;amp;=1\end{align*}&lt;/p&gt;&lt;p&gt;where \(\boldsymbol 1=(1,1,\dotso,1)^T\) denotes all-one vector. Thelast constraint assures that the asset weights sum up toone. Basically, the optimization problem computes asset weights\(\boldsymbol w\) in such a way that the constructed portfolio involvesthe minimum possible risk and furthermore produces a desired returngiven by \(\mu_0\). Portfolio managers usually add more complicatedconstraints and objective terms to change this formulation based ontheir own requirements. For the sake of simplicity, I consider onlythe above optimization problem without any extra constraints andobjective terms.&lt;/p&gt;&lt;h3 id=&#34;computing-the-efficient-frontier&#34;&gt;Computing the efficient frontier&lt;/h3&gt;&lt;p&gt;This section demonstrates the set of all efficient portfolios that areselected by the above optimization problem. The risk minimizationformulation chooses for any given level of expected return theportfolio with the minimum risk from the set of all possibleportfolios. Such minimum variance portfolios for different expectedreturns constitute a set, which is called &lt;em&gt;efficient frontier&lt;/em&gt;. Inorder to find this set, the optimization problem should be solved forall given expected returns. The risk minimization formulation,described above, is a quadratic optimization problem with equalityconstraints and has an analytical solution. The problem can be solvedusing the method of Lagrange multipliers (see e.g. Fabozziet. al. 2010, Section 8) with the solution given by:&lt;/p&gt;&lt;p&gt;\begin{equation}\label{eq:ef}\sigma_0^2=\frac{A\mu_0^2-2B\mu_0+C}{AC-B^2}\end{equation}&lt;/p&gt;&lt;p&gt;where \(A=\boldsymbol 1^T\Sigma^{-1}\boldsymbol 1\), \(B=\boldsymbol1^T\Sigma^{-1}\boldsymbol\mu\) and \(C=\boldsymbol\mu^T\Sigma^{-1}\boldsymbol\mu\). According to Equation \(\eqref{eq:ef}\), theminimum variance \(\sigma_0^2\) of a portfolio form a quadratic functionof \(\mu_0\). This quadratic function has a minimum value, whichcorresponds to the portfolio with the global minimum variance. This can becomputed by:&lt;/p&gt;&lt;p&gt;\[\frac{\mathrm{d}\sigma_0^2}{\mathrm{d}\mu_0}=\frac{2A\mu_0-2B}{AC-B^2}=0\Rightarrow\mu_0=\frac{A}{B}=\frac{\boldsymbol 1^T\Sigma^{-1}}{\boldsymbol 1^T\Sigma^{-1}\boldsymbol 1}\boldsymbol\mu\]&lt;/p&gt;&lt;p&gt;Since we know that \(\mu_0=\boldsymbol w^T\boldsymbol\mu\) then theglobal minimum variance portfolio becomes:&lt;/p&gt;&lt;p&gt;\[\boldsymbol w_{\mathrm{min}}=\frac{\Sigma^{-1}\boldsymbol 1}{\boldsymbol 1^T\Sigma^{-1}\boldsymbol 1}\]&lt;/p&gt;&lt;p&gt;This portfolio is not interesting only because it is the least riskyone, but also because its construction does not require any estimationof expected returns (vector \(\boldsymbol\mu\)). That is important, assuch an estimation is subject to error and uncertainty, particularlyif it relies on historical price data.&lt;/p&gt;&lt;p&gt;With all the formulas given above, computing the efficient frontierwill be straightforward. At first we pick up our universe, the set ofall assets we want to invest in and then download their pricedata. The follwing python code uses &lt;code&gt;yfinance&lt;/code&gt; package for thispurpose.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;yfinance&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;yf&lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;numpy&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;np&lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;pandas&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;pd&lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;plt&lt;/span&gt;assets &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;GOOG MA AMZN GM AAPL&amp;#34;&lt;/span&gt;data &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; yf&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;download(assets, start&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;2019-01-01&amp;#34;&lt;/span&gt;, end&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;2019-12-31&amp;#34;&lt;/span&gt;)[&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Adj Close&amp;#39;&lt;/span&gt;]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;One of the main challenges of portfolio optimization is the estimationof expected returns \(\boldsymbol\mu\) and the covariance matrix\(\Sigma\). One approach is to estimate them by sample mean andcovariance, respectively. However, it is known to provide poorestimation and to show high sensitivity to price fluctuation,specially for expected returns. There are several other estimationsthat are generally considered more precise and more stable. Package&lt;code&gt;pyopt&lt;/code&gt; provides different models for computing expected returns andthe covariance matrix. Here we use exponential moving average modelfor expected returns and exponential covariance for the covariancematrix.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mu&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;expected_returns&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;return_model(data, method&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;ema_historical_return&amp;#39;&lt;/span&gt;)sigma&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;risk_models&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;risk_matrix(data, method&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;exp_cov&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now all the ingredients are ready to derive the efficient frontier.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;plt&lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;math&lt;/span&gt;sigma_inv&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;linalg&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;inv(sigma)all_ones&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;ones(sigma&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;])A&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;all_ones&lt;span style=&#34;color:#a2f&#34;&gt;@sigma_inv@all_ones&lt;/span&gt;B&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;all_ones&lt;span style=&#34;color:#a2f&#34;&gt;@sigma_inv@mu&lt;/span&gt;C&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;mu&lt;span style=&#34;color:#a2f&#34;&gt;@sigma_inv@mu&lt;/span&gt;delta&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;A&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;C&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;B&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;Bcompute_risk&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;lambda&lt;/span&gt; mu0: np&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sqrt((A&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;mu0&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;mu0 &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;B&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;mu0 &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; C) &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt; delta)mu0&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;linspace(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;3.5&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;40&lt;/span&gt;)sigma0&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;compute_risk(mu0)plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(sigma0, mu0)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The result is illustrated in the next diagram.&lt;/p&gt;&lt;figure class=&#34;diag&#34;&gt;    &lt;img src=&#34;https://hhatefi.github.io/ox-hugo/ef.svg&#34;         alt=&#34;Figure 1: Efficient frontier without risk free asset&#34;/&gt; &lt;figcaption&gt;            &lt;p&gt;Figure 1: Efficient frontier without risk free asset&lt;/p&gt;        &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;As it can be observed, increasing the expected return (\(\mu_0\)) leadsto portfolios that take higher risks. Selecting a portfolio with lowerrisk, on the other hand, decrease its performance as well.&lt;/p&gt;&lt;p&gt;We can also calculate the global minimum portfolio weights, its riskand return characteristics.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;gmin_mu0&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;B&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;A                       &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# the expected return at the global minimum risk&lt;/span&gt;gmin_sigma0&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;compute_risk(gmin_mu0) &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# the global minimum risk&lt;/span&gt;w_gmin&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;sigma_inv&lt;span style=&#34;color:#a2f&#34;&gt;@all_ones&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;A        &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# the global minimum risk portfolio&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;AAPL&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;AMZN&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;GM&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;GOOG&lt;/th&gt;&lt;th style=&#34;text-align:center&#34;&gt;MA&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Weights&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;9.62%&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;22.08%&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;23.46%&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;19.48%&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;25.37%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Return&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;1.04&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;0.19&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;0.10&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;0.32&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;0.53&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Risk&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;0.22&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;0.20&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;0.24&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;0.21&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;0.21&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 id=&#34;capital-market-line-and-the-tangency-portfolio&#34;&gt;Capital market line and the tangency portfolio&lt;/h2&gt;&lt;p&gt;Investors can add a risk free asset to improve the performance oftheir portfolio. A risk free asset is an asset with a fixed return\(R_f\) that might be selected by investors together with a combinationof \(N\) risky assets as before. On the efficient frontier allportfolios comprises of only risky assets. Adding the risk-free assetimplies that the weights of risky assets do not necessarily sum up toone, as the difference is invested in the risk free asset. Therefore,both risky and risk-free assets contributes to the expected return ofthe portfolio:&lt;/p&gt;&lt;p&gt;\begin{align*}\mu_p=&amp;amp;\boldsymbol w^T\boldsymbol\mu+(1-\boldsymbol w^T\boldsymbol 1)R_f\\&lt;br&gt;\end{align*}&lt;/p&gt;&lt;p&gt;However, the overall portfolio risk depends only on the risky assets,since the risk free asset has zero variance and is independent of therisky assets.&lt;/p&gt;&lt;p&gt;\begin{align*}\sigma_p=&amp;amp;\boldsymbol w^T\Sigma\boldsymbol w\end{align*}&lt;/p&gt;&lt;p&gt;Putting the risk and the return of the portfolio into risk minimizationformulation gives:&lt;/p&gt;&lt;p&gt;\[\min~\boldsymbol w^T\Sigma\boldsymbol w\]subject to\[\mu_0=\boldsymbol w^T\boldsymbol\mu+(1-\boldsymbol w^T\boldsymbol 1)R_f\]&lt;/p&gt;&lt;p&gt;The optimization problem can again be solved by the method of Lagrangemultipliers. The optimal portfolio weights are derived as follows:&lt;/p&gt;&lt;p&gt;\begin{equation}\label{eq:wrf}\boldsymbol w=K\Sigma^{-1}(\boldsymbol\mu-R_f\boldsymbol 1)\end{equation}&lt;/p&gt;&lt;p&gt;where\[K=\frac{\mu_0-R_f}{(\boldsymbol\mu-R_f\boldsymbol 1)^T\Sigma^{-1}(\boldsymbol\mu-R_f\boldsymbol 1)}=\frac{\mu_0-R_f}{AR_f^2-2R_fB+C}\]&lt;/p&gt;&lt;p&gt;In order to illustrate the relation between the risk and the return,we can derive \(\sigma_0^2\) as a function of \(\mu_0\) using\eqref{eq:wrf}:&lt;/p&gt;&lt;p&gt;\begin{equation*}\sigma_0^2=\boldsymbol w^T\Sigma\boldsymbol w=\frac{(\mu_0-R_f)^2}{(\boldsymbol\mu-R_f\boldsymbol 1)^T\Sigma^{-1}(\boldsymbol\mu-R_f\boldsymbol 1)}=\frac{(\mu_0-R_f)^2}{AR_f^2-2R_fB+C}\end{equation*}&lt;/p&gt;&lt;p&gt;This time the expected return and its corresponding minimal risk lieon a line. For \(\mu_0\ge R_f\):&lt;/p&gt;&lt;p&gt;\begin{equation}\label{eq:cml}\sigma_0=\frac{\mu_0-R_f}{\sqrt{(\boldsymbol\mu-R_f\boldsymbol 1)^T\Sigma^{-1}(\boldsymbol\mu-R_f\boldsymbol 1)}}=\frac{\mu_0-R_f}{\sqrt{AR_f^2-2R_fB+C}}\end{equation}&lt;/p&gt;&lt;p&gt;There are two specially interesting portfolios on line\eqref{eq:cml}. The portfolio with zero risk coincides with \(\mu_0\)being \(R_f\), which contains only the risk free asset. On the otherside, there is a portfolio comprising merely the risky assets. Becauseit only includes the risky assets, it must also lie on the efficientfrontier, represented by \eqref{eq:ef}. Therefore, this portfolio islocated on the intersection between \eqref{eq:ef} and\eqref{eq:cml}. In addition, it can be shown that \eqref{eq:cml} is atangent line to \eqref{eq:ef}. The portfolio at the intersection pointis thereby called &lt;em&gt;tangancy portfolio&lt;/em&gt;. Under certain condition (Fama1970), it is also named as &lt;a href=&#34;https://en.wikipedia.org/wiki/Market%5Fportfolio&#34;&gt;&lt;em&gt;market portfolio&lt;/em&gt;&lt;/a&gt;. Moreover, line\eqref{eq:cml} is referred to as the &lt;em&gt;Capital Market Line&lt;/em&gt; (CML).&lt;/p&gt;&lt;p&gt;To compute the tangency portfolio, it is enough to find theintersection between \eqref{eq:cml} and \eqref{eq:ef}. As explainedbefore, the intersection embodies only the risky assets. Let\(\boldsymbol w_m\) be the market portfolio, then it holds that\(\boldsymbol w_m^T\boldsymbol 1=1\), as the weight of risk free asset iszero. Therefore:&lt;/p&gt;&lt;p&gt;\[\boldsymbol w^T\boldsymbol 1=\left(K\Sigma^{-1}(\boldsymbol\mu-R_f\boldsymbol 1)\right)^T\boldsymbol 1=1\Rightarrow K=\frac{1}{\boldsymbol 1^T\Sigma(\boldsymbol\mu-R_f\boldsymbol 1)}\]&lt;/p&gt;&lt;p&gt;And finally substituting \(K\) into \(\eqref{eq:wrf}\) gives the marketportfolio:\[\boldsymbol w_m=\frac{\Sigma^{-1}(\boldsymbol\mu-R_f\boldsymbol 1)}{\boldsymbol 1^T\Sigma(\boldsymbol\mu-R_f\boldsymbol 1)}\]&lt;/p&gt;&lt;p&gt;Furthermore, putting \(\boldsymbol w_m\) into \(\mu_0=\boldsymbolw_m^T\boldsymbol\mu\) and \(\sigma_0=\boldsymbol w_m^T\Sigma\boldsymbolw_m\) gives:&lt;/p&gt;&lt;p&gt;\begin{align*}\mu_0=&amp;amp;\frac{C-BR_f}{B-AR_f}\\\&lt;br&gt;\sigma_0=&amp;amp;\frac{\sqrt{AR_f^2-2R_fB+C}}{B-AR_f}\end{align*}&lt;/p&gt;&lt;p&gt;Now we can put all the formulas together to compute CML and thetangency portfolio:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;math&lt;/span&gt;rf &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0.05&lt;/span&gt;D&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;A&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;rf&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;rf&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;rf&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;B&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;Csigma_rf&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;(mu0&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;rf)&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;math&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sqrt(D)w_m&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;sigma_inv&lt;span style=&#34;&#34;&gt;@&lt;/span&gt;(mu &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; rf)&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;(all_ones&lt;span style=&#34;color:#a2f&#34;&gt;@sigma&lt;/span&gt;&lt;span style=&#34;&#34;&gt;@&lt;/span&gt;(mu &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; rf))mu_t&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;(C&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;B&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;rf)&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;(B&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;A&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;rf)sigma_t&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;math&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sqrt(D)&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;(B&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;A&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;rf)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The result is illustrated in the following figure. It can be observedthat a portfolio on the CML outperforms the corresponding portfolio onthe efficient frontier with the same risk level. That is to say,introducing the risk free asset improves the performance of theportfolio.&lt;/p&gt;&lt;figure class=&#34;diag&#34;&gt;    &lt;img src=&#34;https://hhatefi.github.io/ox-hugo/ef_cml.svg&#34;         alt=&#34;Figure 2: Efficient frontier with capital market line&#34;/&gt; &lt;figcaption&gt;            &lt;p&gt;Figure 2: Efficient frontier with capital market line&lt;/p&gt;        &lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 id=&#34;conclusions&#34;&gt;Conclusions&lt;/h2&gt;&lt;p&gt;Modern portfolio theory utilizes mean-variance optimization toconstruct portfolios by offering a trade-off between their risk andtheir return. The optimization problem can be formulated in differentways. Risk minimization formulation computes the minimum riskportfolio for a desired expected return. Including a risk free assetinto asset universe can improve portfolio selection.&lt;/p&gt;&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;&lt;p&gt;Fabozzi et al. &amp;ldquo;Quantitative Equity Investing: Techniques andStrategies,&amp;rdquo; John Wiley &amp;amp; Sons (2010)&lt;/p&gt;&lt;p&gt;Eugene F. Fama, &amp;ldquo;Efficient Capital Markets: A Review of Theory andEmpirical Work,&amp;rdquo; Journal of Finance, 25 (1970), pp. 383-417&lt;/p&gt;</description>
     </item>
   
     <item>
       <title>A Helper for zipline data bundles</title>
       <link>https://hhatefi.github.io/posts/zipline_bundles/</link>
       <pubDate>Sun, 06 Sep 2020 22:30:47 +0200</pubDate>
       
       <guid>https://hhatefi.github.io/posts/zipline_bundles/</guid>
       <description>&lt;p&gt;Data bundles in zipline feed trading strategies with price data duringbacktesting. Zipline comes with some data bundles including the onethat downloads price data from &lt;a href=&#34;https://www.quandl.com/data/WIKI&#34;&gt;quandl&amp;rsquo;s wiki dataset&lt;/a&gt;. However, it isoften necessary to employ custom data bundles, for example to fetchprice of assets not provided by the existing data bundles. Adding suchbundles to zipline can be error-prone and tricky. It requires severalsteps to be done from reading price data to preprocessing and feedingthem into zipline internal database. The latter step is analogousaccross all data bundles. It thus makes sense to simplify the wholeprocess by focusing only on price data fetching and preprocessing andletting the rest to be done by a generic ingester. I recently tried toimplement such a &lt;a href=&#34;https://github.com/hhatefi/zipline%5Fbundles/&#34;&gt;generic ingester&lt;/a&gt;.&lt;/p&gt;&lt;h2 id=&#34;generic-ingester&#34;&gt;Generic Ingester&lt;/h2&gt;&lt;p&gt;Zipline requires custom data bundles to implement &lt;code&gt;ingest&lt;/code&gt; function&lt;a href=&#34;https://www.zipline.io/bundles.html#writing-a-new-bundle&#34;&gt;properly&lt;/a&gt;. The function basically writes price data and symbolinformation to zipline internal database. A &lt;em&gt;generic&lt;/em&gt; &lt;code&gt;ingest&lt;/code&gt;function, on the one hand, implements operations that are identicalfor every data bundle, and on the other hand, enables customization ofoperations that are specific to a data bundle. It can ingest pricedata from a bunch of csv files with specific format or can directlydownload them via the API provided by price data provider.&lt;/p&gt;&lt;p&gt;I have used the generic ingester to implement data bundles that&lt;/p&gt;&lt;ol&gt;&lt;li&gt;reads price data from a directory containig csv files downloadedfrom &lt;a href=&#34;https://finance.yahoo.com&#34;&gt;yahoo finance&lt;/a&gt;,&lt;/li&gt;&lt;li&gt;directly download price data from yahoo finance, thanks to&lt;a href=&#34;https://pypi.org/project/yahoofinancials/&#34;&gt;yahoofinancials&lt;/a&gt;,&lt;/li&gt;&lt;li&gt;directly download price data from &lt;a href=&#34;https://iexcloud.io&#34;&gt;IEX cloud&lt;/a&gt;, thanks to &lt;a href=&#34;https://pypi.org/project/iexfinance/&#34;&gt;iexfinance&lt;/a&gt;.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Looking into &lt;a href=&#34;https://github.com/hhatefi/zipline%5Fbundles/tree/master/lib&#34;&gt;their implementation&lt;/a&gt; greatly helps to understand how touse the generic ingester. Later in this post, however, I explain howto define a new bundle using the generic ingester in detail.&lt;/p&gt;&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;&lt;p&gt;There is a quick way to use or test the already mentioned &lt;a href=&#34;#generic-ingester&#34;&gt;data bundles&lt;/a&gt;with zipline. The first step is to get the source from github:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git clone https://github.com/hhatefi/zipline_bundles&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The repository comes with an &lt;a href=&#34;https://github.com/hhatefi/zipline%5Fbundles/blob/master/install.py&#34;&gt;installation script&lt;/a&gt;, which can be used toadd the data bundles to the zipline framework. Before using it, Iassume there is already an environment with zipline installed and itis ready to be used. The installation is done by&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#a2f&#34;&gt;cd&lt;/span&gt; zipline_bundlespython3 installer.py&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The installer copies the following files:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/hhatefi/zipline%5Fbundles/blob/master/lib/extension.py&#34;&gt;extension.py&lt;/a&gt; to &lt;code&gt;$HOME/.zipline&lt;/code&gt;,&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/hhatefi/zipline%5Fbundles/blob/master/lib/ingester.py&#34;&gt;ingester.py&lt;/a&gt;, &lt;a href=&#34;https://github.com/hhatefi/zipline%5Fbundles/blob/master/lib/yahoo.py&#34;&gt;yahoo.py&lt;/a&gt; and &lt;a href=&#34;https://github.com/hhatefi/zipline%5Fbundles/blob/master/lib/iex.py&#34;&gt;iex.py&lt;/a&gt; into &lt;code&gt;zipline.data.bundles&lt;/code&gt;package.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Note that the installer complains if there already exist pythonmodules with the same name in the destination directories. To forcethe installer to overwrite the existing modules, add &lt;code&gt;-f&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;In general the installer copies all files listed in variable &lt;code&gt;src_ext&lt;/code&gt;into &lt;code&gt;$HOME/.zipline&lt;/code&gt; and those listed in &lt;code&gt;src_ing&lt;/code&gt; into&lt;code&gt;zipline.data.bundles&lt;/code&gt; package. In case a new bundle is added, theappropriate modules can be usually appended to &lt;code&gt;src_ing&lt;/code&gt; list. Theinstallation script can then be used to install the new bundle.&lt;/p&gt;&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;&lt;p&gt;The available bundles are listed by&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;zipline bundles&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If the installation is done successfully, it will show new bundles&lt;code&gt;yahoo_csv&lt;/code&gt;, &lt;code&gt;yahoo_direct&lt;/code&gt; and &lt;code&gt;iex&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;&lt;code&gt;yahoo_csv&lt;/code&gt; bundle takes data from csv files downloaded from &lt;a href=&#34;https://finance.yahoo.com&#34;&gt;yahoofinance&lt;/a&gt;. Each file contains price data of a single asset and shall benamed as &lt;code&gt;assert_name.csv&lt;/code&gt;. The bundle reads all the csv files locatedin a directory given by environment variable &lt;code&gt;YAHOO_CSVDIR&lt;/code&gt;:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;YAHOO_CSVDIR&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;/path/to/csvdir zipline ingest -b yahoo_csv&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;yahoo_direct&lt;/code&gt; directly downloads price data from &lt;a href=&#34;https://finance.yahoo.com&#34;&gt;yahoo finance&lt;/a&gt;. Thebundle exracts asset names from environment variable &lt;code&gt;YAHOO_SYM_LST&lt;/code&gt;,which holds a comma separated list of asset names, for example:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;YAHOO_SYM_LST&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;SPY,AAPL zipline ingest -b yahoo_direct&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;gets price data of assets &lt;code&gt;SPY&lt;/code&gt; and &lt;code&gt;AAPL&lt;/code&gt;. The start and end date ofprice data ingestion can be set into variables &lt;code&gt;start_date&lt;/code&gt; and&lt;code&gt;end_date&lt;/code&gt;, respectively. The variables are passed to function&lt;code&gt;get_downloader&lt;/code&gt; where the bundle is registered in&lt;code&gt;$HOME/.zipline/extension.py&lt;/code&gt;. More information comes next.&lt;/p&gt;&lt;p&gt;&lt;code&gt;iex&lt;/code&gt; it downloads price data from IEX cloud. Its usage is fairlysimilar to that of &lt;code&gt;yahoo_direct&lt;/code&gt;. Fetching price data from IEX cloudhowever requires passing a valid API token, which is stored inenvironment variable &lt;code&gt;IEX_TOKEN&lt;/code&gt; and read by &lt;code&gt;iexfinance&lt;/code&gt;package. Moreover, the environmet variable storing asset names iscalled &lt;code&gt;IEX_SYM_LST&lt;/code&gt;.&lt;/p&gt;&lt;h2 id=&#34;defining-new-bundles&#34;&gt;Defining new bundles&lt;/h2&gt;&lt;p&gt;In zipline a new bundle, which implements the &lt;code&gt;ingest&lt;/code&gt; function, mustbe registered in the extension module &lt;code&gt;extension.py&lt;/code&gt;, ususaly found in&lt;code&gt;$HOME/.zipline/&lt;/code&gt;. Here, I explain how to implement an &lt;code&gt;ingest&lt;/code&gt;function and how to register it inside the extension module. I startwith csv data bundles.&lt;/p&gt;&lt;h3 id=&#34;new-csv-data-bundle&#34;&gt;New CSV data bundle&lt;/h3&gt;&lt;p&gt;This bundle aims to read csv files from a location, to store them into&lt;code&gt;pandas.DataFrame&lt;/code&gt; objects, to preprocess and feed them into ziplineinternal database. Most of the time for csv files, processing thecolumn name is the only thing needs to be done. We also need tospecify where the csv files are located. The registration of a csvdata bundle looks as follows:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;zipline.data.bundles&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; register&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;zipline.data.bundles.ingester&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; csv_ingesterregister(    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;yahoo_csv&amp;#39;&lt;/span&gt;,    csv_ingester(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;YAHOO&amp;#39;&lt;/span&gt;, every_min_bar&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;False, &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# the price is daily&lt;/span&gt; csvdir_env&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;YAHOO_CSVDIR&amp;#39;&lt;/span&gt;, csvdir&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;/path/to/csv/dir&amp;#39;&lt;/span&gt;, index_column&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Date&amp;#39;&lt;/span&gt;, column_mapper&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Open&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;open&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;High&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;high&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Low&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;low&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Close&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;close&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Volume&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;volume&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Adj Close&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;price&amp;#39;&lt;/span&gt;, },    ),    calendar_name&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;NYSE&amp;#39;&lt;/span&gt;,)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As mensioned before, the registration is done in&lt;code&gt;$HOME/.zipline/extension.py&lt;/code&gt;. The &lt;code&gt;ingest&lt;/code&gt; function is defined bycreating an object of type &lt;code&gt;csv_ingester&lt;/code&gt;, which is a functor. Theparameters are as follows:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;&#39;YAHOO&#39;&lt;/code&gt; is an arbitrary name for the exchange providing data.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;every_min_bar&lt;/code&gt; indicates the price frequency. When it is &lt;code&gt;true&lt;/code&gt;,the prices in csv files are supposed to be reported per minute.Otherwise they are expected to be stored daily.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;csvdir_env&lt;/code&gt; is the name of the environment variable holding csvdirectory. It can be set, for instance, while ingesting price data:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;YAHOO_CSV&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;/path/to/csvdir zipline ingest -b yahoo_csv&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Zipline then searches for csv files inside &lt;code&gt;/path/to/csvdir&lt;/code&gt;. Thedata bundle extracts the asset names from the filename by striping&lt;code&gt;csv&lt;/code&gt; extension from the filename. For example, it considers&lt;code&gt;AAPL.csv&lt;/code&gt; to store price data of Apple stock.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;csvdir&lt;/code&gt; is the default csv directory that is used in case theenvironemnt variable is not set to a valid csv directory.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;index_column&lt;/code&gt; is the column name inside csv file that stores timeand date information. The bundle reads csv files into&lt;code&gt;pandas.DataFrame&lt;/code&gt; objects with the index set to the given column.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;column_mapper&lt;/code&gt; is a dictionary to be used for renaming data columnsto comply with OHLCV format, as expected by zipline. As saidearlier, price data are stored in dataframe objects, whose columnsare identical to the corresponding columns in csv files. Renaming isnecessary if the csv files do not respect OHLCV format.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;There are two other parameters passed to the &lt;code&gt;register&lt;/code&gt;function. &lt;code&gt;&#39;yahoo_csv&#39;&lt;/code&gt; is the bundle name and &lt;code&gt;calender_name&lt;/code&gt; is the&lt;a href=&#34;https://www.zipline.io/trading-calendars.html&#34;&gt;trading calendar&lt;/a&gt; on which the date and time of prices are based.&lt;/p&gt;&lt;h3 id=&#34;new-direct-data-bundle&#34;&gt;New direct data bundle&lt;/h3&gt;&lt;p&gt;This type of bundle directly downloads price data via the API providedby a data provider. The &lt;em&gt;downloader&lt;/em&gt; function is responsible to fetchprice data and deliver it to the ingester. The ingester then feeds thedata into zipline internal database. Thus, the main step is to definethe downloader. Similar to a csv ingester, a direct ingester needs tobe regitered before being used by zipline. As an example, I explain,step by step, how a bundle capable of fetching data from &lt;a href=&#34;https://iexcloud.io/&#34;&gt;IEX cloud&lt;/a&gt; canbe registered and defined.&lt;/p&gt;&lt;p&gt;At first, a &lt;em&gt;downloader&lt;/em&gt; function is required to download price datavia IEX cloud API. The downloader is invoked by the ingester withappropriate parameters. It needs therefore to provide a specificsignature.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;pandas&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; Timestamp&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;iexfinance.stocks&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; get_historical_data&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;get_downloader&lt;/span&gt;(start_date,       end_date,):    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&amp;#34;&amp;#34;returns a downloader closure for iex cloud&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;    :param start_date: the first day on which dat are downloaded&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;    :param end_date: the last day on which data are downloaded&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;    :type start_date: str in format YYYY-MM-DD&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;    :type end_date: str in format YYYY-MM-DD&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;    dt_start&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;Timestamp(start_date)&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;date()    dt_end&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;Timestamp(end_date)&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;date()    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;downloader&lt;/span&gt;(symbol):&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&amp;#34;&amp;#34;downloads symbol price data using iex cloud API&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;:param symbol: the symbol name&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;:type symbol: str&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;df &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; get_historical_data(symbol, dt_start, dt_end, output_format&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;pandas&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;return&lt;/span&gt; df    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;return&lt;/span&gt; downloader&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The downloader is generated by function &lt;code&gt;get_downloader&lt;/code&gt; as aclosure. This function takes the date interval via arguments&lt;code&gt;start_date&lt;/code&gt; and &lt;code&gt;end_date&lt;/code&gt;, within which price data aredownloaded. The downloader takes the symbol name as the argument andfetches price data by calling&lt;code&gt;get_historical_data&lt;/code&gt;. &lt;code&gt;get_historical_data&lt;/code&gt; provided by package&lt;a href=&#34;https://pypi.org/project/iexfinance/&#34;&gt;iexfinance&lt;/a&gt; handles relevant REST API calls to fetch data and thenconverts and returns them as a &lt;code&gt;pandas.DataFrame&lt;/code&gt;. The return valuemust in addition comply with OHLCV format. Assume the above code blockis stored as &lt;code&gt;iex.py&lt;/code&gt; within &lt;code&gt;zipline.data.bundles&lt;/code&gt; package, the nextstep is to register a new data bundle, which uses the downloader tofetch price data from IEX cloud. The registration is done within&lt;code&gt;extension.py&lt;/code&gt;.&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;zipline.data.bundles.ingester&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; direct_ingester&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;zipline.data.bundles&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; iexregister(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;iex&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# bundle&amp;#39;s name&lt;/span&gt; direct_ingester(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;IEX Cloud&amp;#39;&lt;/span&gt;, every_min_bar&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;False, symbol_list_env&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;IEX_SYM_LST&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# the environemnt variable holding the comma separated list of asset names&lt;/span&gt; downloader&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;iex&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get_downloader(start_date&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2015-01-01&amp;#39;&lt;/span&gt;,   end_date&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2020-01-01&amp;#39;&lt;/span&gt; ), ), calendar_name&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;NYSE&amp;#39;&lt;/span&gt;,)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The bundles is called &lt;code&gt;iex&lt;/code&gt; and similar to &lt;code&gt;yahoo_csv&lt;/code&gt; uses &lt;code&gt;NYSE&lt;/code&gt;trading calendar. The &lt;code&gt;ingest&lt;/code&gt; function is defined bycreating an object of type &lt;code&gt;direct_ingester&lt;/code&gt;, which is a functor. Theparameters are as follows:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;&#39;IEX Cloud&#39;&lt;/code&gt; is an arbitrary name for the exchange providing data.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;every_min_bar&lt;/code&gt; indicates the price frequency. When it is &lt;code&gt;true&lt;/code&gt;,the prices are supposed to be reported per minute. Otherwise theyare daily prices.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;symbol_list_env&lt;/code&gt; is the name of the environment variable holding acomma separated list of asset names. It can be set, for instance,while ingesting price data:&lt;/p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;IEX_SYM_LST&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;SPY,AAPL,TWTR zipline ingest -b iex&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Zipline then download data for assets &lt;code&gt;SPY&lt;/code&gt;, &lt;code&gt;AAPL&lt;/code&gt; and &lt;code&gt;TWTR&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;downloader&lt;/code&gt; is the downloader function, which in this case given by&lt;code&gt;iex.get_downloader&lt;/code&gt;, defined above. Price data are downloadedbetween given &lt;code&gt;start_date&lt;/code&gt; and &lt;code&gt;end_date&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;&lt;p&gt;This helper aims to simplify the process of defining new data bundlesregardless of reading data from csv files or directly downloading themvia network. New data bundles can be added by customizing the genericingester. The user can only focus on data retrival and filtering andlet the other tasks done by the helper module.&lt;/p&gt;</description>
     </item>
   
 </channel>
</rss>
